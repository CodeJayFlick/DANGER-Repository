    getSymbol;   node;
      * 	* 1 0;   node; 
			* (i);  getSymbol;   node;   program; 	* Symbol;  get
	* 	*   node;  getSymbol;  i;     get;  Symbol;  i;    get;  Symbol;  node; 0;
   get;  Symbol;  get; 0      get;  in 0;  node; 1  get; 0;  get;  node;  get; 0; 0;  node; 0;  get.Symbol; 0;  node;  get; 0;   program; 0;  get; 0;  node; 0;  get; 0;  node; 0;  get;  node; 0; 0;  node;  get;  node; 0;  node; 0;    get;  node; 0;   node; 0;  get;  node; 0;  node;  get;  node; 0; 0;  node;  get;  node; 0;  node; 0;  node;  node; 0;  node;  node; 0;  node;  node; 0;  node;  node;  node;  node;  node;  node;  node;   node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node;  node; 